name: Build Wheel

on:
  workflow_call:
    inputs:
      release_version:
        required: true
        type: string
      upload_pypi:
        required: true
        type: boolean

jobs:
  setup_wheel_jobs:
    runs-on: [ubuntu-latest]
    outputs:
      pytorch_channel: ${{ steps.output_variables.outputs.pytorch_channel }}
      fbgemm_package_name: ${{ steps.output_variables.outputs.fbgemm_package_name }}
      torchrec_package_name: ${{ steps.output_variables.outputs.torchrec_package_name }}
    steps:
    - id: output_variables
      run: |
        if [ x"${{ inputs.release_version }}" == x"nightly" ]; then
          echo "pytorch_channel=pytorch-nightly" >> $GITHUB_OUTPUT
          echo "fbgemm_package_name=fbgemm_gpu_nightly" >> $GITHUB_OUTPUT
          echo "torchrec_package_name=torchrec_nightly" >> $GITHUB_OUTPUT
        elif [ x"${{ inputs.release_version }}" == x"prerelease" ]; then
          echo "pytorch_channel=pytorch-test" >> $GITHUB_OUTPUT
          echo "fbgemm_package_name=fbgemm_gpu_test" >> $GITHUB_OUTPUT
          echo "torchrec_package_name=torchrec_test" >> $GITHUB_OUTPUT
        elif [ x"${{ inputs.release_version }}" == x"release" ]; then
          echo "pytorch_channel=pytorch" >> $GITHUB_OUTPUT
          echo "fbgemm_package_name=fbgemm_gpu" >> $GITHUB_OUTPUT
          echo "torchrec_package_name=torchrec" >> $GITHUB_OUTPUT
        else
          echo "Error: unknown release_version ${{ inputs.release_version }}"
          exit 1
        fi

  # Build on CPU hosts and upload *.whl as an GitHub Action artifact
  build_wheel:
    needs: [setup_wheel_jobs]
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        cuda-tag: ["cpu", "cu11"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: main
    - name: Do nothing
      run: |
        date

  # Download the GitHub Action artifact and test the artifact on a GPU machine
  test_wheel_gpu:
    needs: [setup_wheel_jobs, build_wheel]
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        cuda-tag: ["cu11"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: main
    - name: Do nothing
      run: |
        date

  # Download the GitHub Action artifact and test the artifact on a GPU machine
  test_wheel_cpu:
    needs: [setup_wheel_jobs, build_wheel]
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        cuda-tag: ["cpu"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: main
    - name: Do nothing
      run: |
        date

  # Upload the created wheels to PyPI
  upload_pypi:
    needs: [setup_wheel_jobs, test_wheel_gpu, test_wheel_cpu]
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        cuda-tag: ["cu11", "cpu"]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: main
    - name: Upload a wheel to PyPI
      if: ${{ inputs.upload_pypi }}
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        date
        echo "PYPI_TOKEN = $PYPI_TOKEN"
        echo "PYPI_TOKEN+123 = $(($PYPI_TOKEN + 123))"
