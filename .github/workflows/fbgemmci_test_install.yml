# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test Installation Script

on: 
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - labeled

jobs:
  test_nightly_build:
    runs-on: ubuntu-latest

    if: contains(github.event.pull_request.labels.*.name, 'test_install')
    steps:
    - name: Run nightly build
      run: |
        echo "Run test_nightly_build"

  test_torchrec_integration:
    runs-on: ubuntu-latest
    needs: [test_nightly_build]
    steps:
    - name: Run nightly build
      run: |
        echo "Run test_torchrec_integration"

  build_nightly:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        cuda-tag: ["cu11", "cpu"]
    steps:
    - name: Run nightly build
      run: |
        mkdir -p fbgemm_gpu/dist/
        echo "fbgemm_gpu/dist/fbgemm_gpu_nightly_${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl" > fbgemm_gpu/dist/fbgemm_gpu_nightly-${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl
        cat fbgemm_gpu/dist/fbgemm_gpu_nightly-${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl

    - name: Upload wheel as GHA artifact
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: fbgemm_gpu_nightly_${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl
        path: fbgemm_gpu/dist/fbgemm_gpu_nightly-*.whl

  # Download the GitHub Action artifact and test the artifact on a GPU machine
  test_nightly_gpu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        cuda-tag: ["cu11"]
    needs: [build_nightly]
    steps:
    - name: Download wheel
      uses: actions/download-artifact@v3
      with:
        name: fbgemm_gpu_nightly_${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl
    - name: Install CUDA drivers
      shell: bash
      run: |
        cat fbgemm_gpu_nightly-${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl
  
  # Download the GitHub Action artifact and test the artifact on a CPU machine
  test_nightly_cpu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        cuda-tag: ["cpu"]
    needs: [build_nightly]
    steps:
    - name: Download wheel
      uses: actions/download-artifact@v3
      with:
        name: fbgemm_gpu_nightly_${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl
        path: 
    - name: Install CUDA drivers
      shell: bash
      run: |
        cat fbgemm_gpu_nightly-${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl

  upload_pypi_nightly:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        cuda-tag: ["cu11", "cpu"]
    needs: [build_nightly, test_nightly_gpu, test_nightly_cpu]
    steps:
    # Push to PYPI
    - name: Download wheel
      uses: actions/download-artifact@v3
      with:
        name: fbgemm_gpu_nightly_${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl
    - name: Install CUDA drivers
      shell: bash
      run: |
        cat fbgemm_gpu_nightly-${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl
